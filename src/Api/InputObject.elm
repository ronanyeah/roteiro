-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module Api.InputObject exposing (..)

import Api.Interface
import Api.Object
import Api.Scalar
import Api.Union
import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


buildPositionWhereInput : (PositionWhereInputOptionalFields -> PositionWhereInputOptionalFields) -> PositionWhereInput
buildPositionWhereInput fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, not = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, submissions_every = Absent, submissions_some = Absent, submissions_none = Absent, transitionsFrom_every = Absent, transitionsFrom_some = Absent, transitionsFrom_none = Absent, transitionsTo_every = Absent, transitionsTo_some = Absent, transitionsTo_none = Absent, user = Absent }
    in
    PositionWhereInput { and = optionals.and, or = optionals.or, not = optionals.not, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, submissions_every = optionals.submissions_every, submissions_some = optionals.submissions_some, submissions_none = optionals.submissions_none, transitionsFrom_every = optionals.transitionsFrom_every, transitionsFrom_some = optionals.transitionsFrom_some, transitionsFrom_none = optionals.transitionsFrom_none, transitionsTo_every = optionals.transitionsTo_every, transitionsTo_some = optionals.transitionsTo_some, transitionsTo_none = optionals.transitionsTo_none, user = optionals.user }


type alias PositionWhereInputOptionalFields =
    { and : OptionalArgument (List PositionWhereInput), or : OptionalArgument (List PositionWhereInput), not : OptionalArgument (List PositionWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, submissions_every : OptionalArgument SubmissionWhereInput, submissions_some : OptionalArgument SubmissionWhereInput, submissions_none : OptionalArgument SubmissionWhereInput, transitionsFrom_every : OptionalArgument TransitionWhereInput, transitionsFrom_some : OptionalArgument TransitionWhereInput, transitionsFrom_none : OptionalArgument TransitionWhereInput, transitionsTo_every : OptionalArgument TransitionWhereInput, transitionsTo_some : OptionalArgument TransitionWhereInput, transitionsTo_none : OptionalArgument TransitionWhereInput, user : OptionalArgument UserWhereInput }


{-| Type alias for the `PositionWhereInput` attributes. Note that this type
needs to use the `PositionWhereInput` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/graphqelm/issues/33>.
-}
type alias PositionWhereInputRaw =
    { and : OptionalArgument (List PositionWhereInput), or : OptionalArgument (List PositionWhereInput), not : OptionalArgument (List PositionWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, submissions_every : OptionalArgument SubmissionWhereInput, submissions_some : OptionalArgument SubmissionWhereInput, submissions_none : OptionalArgument SubmissionWhereInput, transitionsFrom_every : OptionalArgument TransitionWhereInput, transitionsFrom_some : OptionalArgument TransitionWhereInput, transitionsFrom_none : OptionalArgument TransitionWhereInput, transitionsTo_every : OptionalArgument TransitionWhereInput, transitionsTo_some : OptionalArgument TransitionWhereInput, transitionsTo_none : OptionalArgument TransitionWhereInput, user : OptionalArgument UserWhereInput }


{-| Type for the PositionWhereInput input object.
-}
type PositionWhereInput
    = PositionWhereInput PositionWhereInputRaw


{-| Encode a PositionWhereInput into a value that can be used as an argument.
-}
encodePositionWhereInput : PositionWhereInput -> Value
encodePositionWhereInput (PositionWhereInput input) =
    Encode.maybeObject
        [ ( "AND", (encodePositionWhereInput |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodePositionWhereInput |> Encode.list) |> Encode.optional input.or ), ( "NOT", (encodePositionWhereInput |> Encode.list) |> Encode.optional input.not ), ( "id", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "createdAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "updatedAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "submissions_every", encodeSubmissionWhereInput |> Encode.optional input.submissions_every ), ( "submissions_some", encodeSubmissionWhereInput |> Encode.optional input.submissions_some ), ( "submissions_none", encodeSubmissionWhereInput |> Encode.optional input.submissions_none ), ( "transitionsFrom_every", encodeTransitionWhereInput |> Encode.optional input.transitionsFrom_every ), ( "transitionsFrom_some", encodeTransitionWhereInput |> Encode.optional input.transitionsFrom_some ), ( "transitionsFrom_none", encodeTransitionWhereInput |> Encode.optional input.transitionsFrom_none ), ( "transitionsTo_every", encodeTransitionWhereInput |> Encode.optional input.transitionsTo_every ), ( "transitionsTo_some", encodeTransitionWhereInput |> Encode.optional input.transitionsTo_some ), ( "transitionsTo_none", encodeTransitionWhereInput |> Encode.optional input.transitionsTo_none ), ( "user", encodeUserWhereInput |> Encode.optional input.user ) ]


buildSubmissionWhereInput : (SubmissionWhereInputOptionalFields -> SubmissionWhereInputOptionalFields) -> SubmissionWhereInput
buildSubmissionWhereInput fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, not = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, position = Absent, tags_every = Absent, tags_some = Absent, tags_none = Absent, user = Absent }
    in
    SubmissionWhereInput { and = optionals.and, or = optionals.or, not = optionals.not, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, position = optionals.position, tags_every = optionals.tags_every, tags_some = optionals.tags_some, tags_none = optionals.tags_none, user = optionals.user }


type alias SubmissionWhereInputOptionalFields =
    { and : OptionalArgument (List SubmissionWhereInput), or : OptionalArgument (List SubmissionWhereInput), not : OptionalArgument (List SubmissionWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, position : OptionalArgument PositionWhereInput, tags_every : OptionalArgument TagWhereInput, tags_some : OptionalArgument TagWhereInput, tags_none : OptionalArgument TagWhereInput, user : OptionalArgument UserWhereInput }


{-| Type alias for the `SubmissionWhereInput` attributes. Note that this type
needs to use the `SubmissionWhereInput` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/graphqelm/issues/33>.
-}
type alias SubmissionWhereInputRaw =
    { and : OptionalArgument (List SubmissionWhereInput), or : OptionalArgument (List SubmissionWhereInput), not : OptionalArgument (List SubmissionWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, position : OptionalArgument PositionWhereInput, tags_every : OptionalArgument TagWhereInput, tags_some : OptionalArgument TagWhereInput, tags_none : OptionalArgument TagWhereInput, user : OptionalArgument UserWhereInput }


{-| Type for the SubmissionWhereInput input object.
-}
type SubmissionWhereInput
    = SubmissionWhereInput SubmissionWhereInputRaw


{-| Encode a SubmissionWhereInput into a value that can be used as an argument.
-}
encodeSubmissionWhereInput : SubmissionWhereInput -> Value
encodeSubmissionWhereInput (SubmissionWhereInput input) =
    Encode.maybeObject
        [ ( "AND", (encodeSubmissionWhereInput |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeSubmissionWhereInput |> Encode.list) |> Encode.optional input.or ), ( "NOT", (encodeSubmissionWhereInput |> Encode.list) |> Encode.optional input.not ), ( "id", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "createdAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "updatedAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "position", encodePositionWhereInput |> Encode.optional input.position ), ( "tags_every", encodeTagWhereInput |> Encode.optional input.tags_every ), ( "tags_some", encodeTagWhereInput |> Encode.optional input.tags_some ), ( "tags_none", encodeTagWhereInput |> Encode.optional input.tags_none ), ( "user", encodeUserWhereInput |> Encode.optional input.user ) ]


buildTagWhereInput : (TagWhereInputOptionalFields -> TagWhereInputOptionalFields) -> TagWhereInput
buildTagWhereInput fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, not = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, submissions_every = Absent, submissions_some = Absent, submissions_none = Absent, transitions_every = Absent, transitions_some = Absent, transitions_none = Absent, user = Absent }
    in
    TagWhereInput { and = optionals.and, or = optionals.or, not = optionals.not, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, submissions_every = optionals.submissions_every, submissions_some = optionals.submissions_some, submissions_none = optionals.submissions_none, transitions_every = optionals.transitions_every, transitions_some = optionals.transitions_some, transitions_none = optionals.transitions_none, user = optionals.user }


type alias TagWhereInputOptionalFields =
    { and : OptionalArgument (List TagWhereInput), or : OptionalArgument (List TagWhereInput), not : OptionalArgument (List TagWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, submissions_every : OptionalArgument SubmissionWhereInput, submissions_some : OptionalArgument SubmissionWhereInput, submissions_none : OptionalArgument SubmissionWhereInput, transitions_every : OptionalArgument TransitionWhereInput, transitions_some : OptionalArgument TransitionWhereInput, transitions_none : OptionalArgument TransitionWhereInput, user : OptionalArgument UserWhereInput }


{-| Type alias for the `TagWhereInput` attributes. Note that this type
needs to use the `TagWhereInput` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/graphqelm/issues/33>.
-}
type alias TagWhereInputRaw =
    { and : OptionalArgument (List TagWhereInput), or : OptionalArgument (List TagWhereInput), not : OptionalArgument (List TagWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, submissions_every : OptionalArgument SubmissionWhereInput, submissions_some : OptionalArgument SubmissionWhereInput, submissions_none : OptionalArgument SubmissionWhereInput, transitions_every : OptionalArgument TransitionWhereInput, transitions_some : OptionalArgument TransitionWhereInput, transitions_none : OptionalArgument TransitionWhereInput, user : OptionalArgument UserWhereInput }


{-| Type for the TagWhereInput input object.
-}
type TagWhereInput
    = TagWhereInput TagWhereInputRaw


{-| Encode a TagWhereInput into a value that can be used as an argument.
-}
encodeTagWhereInput : TagWhereInput -> Value
encodeTagWhereInput (TagWhereInput input) =
    Encode.maybeObject
        [ ( "AND", (encodeTagWhereInput |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeTagWhereInput |> Encode.list) |> Encode.optional input.or ), ( "NOT", (encodeTagWhereInput |> Encode.list) |> Encode.optional input.not ), ( "id", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "createdAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "updatedAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "submissions_every", encodeSubmissionWhereInput |> Encode.optional input.submissions_every ), ( "submissions_some", encodeSubmissionWhereInput |> Encode.optional input.submissions_some ), ( "submissions_none", encodeSubmissionWhereInput |> Encode.optional input.submissions_none ), ( "transitions_every", encodeTransitionWhereInput |> Encode.optional input.transitions_every ), ( "transitions_some", encodeTransitionWhereInput |> Encode.optional input.transitions_some ), ( "transitions_none", encodeTransitionWhereInput |> Encode.optional input.transitions_none ), ( "user", encodeUserWhereInput |> Encode.optional input.user ) ]


buildTopicWhereInput : (TopicWhereInputOptionalFields -> TopicWhereInputOptionalFields) -> TopicWhereInput
buildTopicWhereInput fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, not = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, user = Absent }
    in
    TopicWhereInput { and = optionals.and, or = optionals.or, not = optionals.not, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, user = optionals.user }


type alias TopicWhereInputOptionalFields =
    { and : OptionalArgument (List TopicWhereInput), or : OptionalArgument (List TopicWhereInput), not : OptionalArgument (List TopicWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, user : OptionalArgument UserWhereInput }


{-| Type alias for the `TopicWhereInput` attributes. Note that this type
needs to use the `TopicWhereInput` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/graphqelm/issues/33>.
-}
type alias TopicWhereInputRaw =
    { and : OptionalArgument (List TopicWhereInput), or : OptionalArgument (List TopicWhereInput), not : OptionalArgument (List TopicWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, user : OptionalArgument UserWhereInput }


{-| Type for the TopicWhereInput input object.
-}
type TopicWhereInput
    = TopicWhereInput TopicWhereInputRaw


{-| Encode a TopicWhereInput into a value that can be used as an argument.
-}
encodeTopicWhereInput : TopicWhereInput -> Value
encodeTopicWhereInput (TopicWhereInput input) =
    Encode.maybeObject
        [ ( "AND", (encodeTopicWhereInput |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeTopicWhereInput |> Encode.list) |> Encode.optional input.or ), ( "NOT", (encodeTopicWhereInput |> Encode.list) |> Encode.optional input.not ), ( "id", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "createdAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "updatedAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "user", encodeUserWhereInput |> Encode.optional input.user ) ]


buildTransitionWhereInput : (TransitionWhereInputOptionalFields -> TransitionWhereInputOptionalFields) -> TransitionWhereInput
buildTransitionWhereInput fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, not = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, startPosition = Absent, endPosition = Absent, tags_every = Absent, tags_some = Absent, tags_none = Absent, user = Absent }
    in
    TransitionWhereInput { and = optionals.and, or = optionals.or, not = optionals.not, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, startPosition = optionals.startPosition, endPosition = optionals.endPosition, tags_every = optionals.tags_every, tags_some = optionals.tags_some, tags_none = optionals.tags_none, user = optionals.user }


type alias TransitionWhereInputOptionalFields =
    { and : OptionalArgument (List TransitionWhereInput), or : OptionalArgument (List TransitionWhereInput), not : OptionalArgument (List TransitionWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, startPosition : OptionalArgument PositionWhereInput, endPosition : OptionalArgument PositionWhereInput, tags_every : OptionalArgument TagWhereInput, tags_some : OptionalArgument TagWhereInput, tags_none : OptionalArgument TagWhereInput, user : OptionalArgument UserWhereInput }


{-| Type alias for the `TransitionWhereInput` attributes. Note that this type
needs to use the `TransitionWhereInput` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/graphqelm/issues/33>.
-}
type alias TransitionWhereInputRaw =
    { and : OptionalArgument (List TransitionWhereInput), or : OptionalArgument (List TransitionWhereInput), not : OptionalArgument (List TransitionWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, name : OptionalArgument String, name_not : OptionalArgument String, name_in : OptionalArgument (List String), name_not_in : OptionalArgument (List String), name_lt : OptionalArgument String, name_lte : OptionalArgument String, name_gt : OptionalArgument String, name_gte : OptionalArgument String, name_contains : OptionalArgument String, name_not_contains : OptionalArgument String, name_starts_with : OptionalArgument String, name_not_starts_with : OptionalArgument String, name_ends_with : OptionalArgument String, name_not_ends_with : OptionalArgument String, startPosition : OptionalArgument PositionWhereInput, endPosition : OptionalArgument PositionWhereInput, tags_every : OptionalArgument TagWhereInput, tags_some : OptionalArgument TagWhereInput, tags_none : OptionalArgument TagWhereInput, user : OptionalArgument UserWhereInput }


{-| Type for the TransitionWhereInput input object.
-}
type TransitionWhereInput
    = TransitionWhereInput TransitionWhereInputRaw


{-| Encode a TransitionWhereInput into a value that can be used as an argument.
-}
encodeTransitionWhereInput : TransitionWhereInput -> Value
encodeTransitionWhereInput (TransitionWhereInput input) =
    Encode.maybeObject
        [ ( "AND", (encodeTransitionWhereInput |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeTransitionWhereInput |> Encode.list) |> Encode.optional input.or ), ( "NOT", (encodeTransitionWhereInput |> Encode.list) |> Encode.optional input.not ), ( "id", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "createdAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "updatedAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "startPosition", encodePositionWhereInput |> Encode.optional input.startPosition ), ( "endPosition", encodePositionWhereInput |> Encode.optional input.endPosition ), ( "tags_every", encodeTagWhereInput |> Encode.optional input.tags_every ), ( "tags_some", encodeTagWhereInput |> Encode.optional input.tags_some ), ( "tags_none", encodeTagWhereInput |> Encode.optional input.tags_none ), ( "user", encodeUserWhereInput |> Encode.optional input.user ) ]


buildUserWhereInput : (UserWhereInputOptionalFields -> UserWhereInputOptionalFields) -> UserWhereInput
buildUserWhereInput fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, not = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, email = Absent, email_not = Absent, email_in = Absent, email_not_in = Absent, email_lt = Absent, email_lte = Absent, email_gt = Absent, email_gte = Absent, email_contains = Absent, email_not_contains = Absent, email_starts_with = Absent, email_not_starts_with = Absent, email_ends_with = Absent, email_not_ends_with = Absent, password = Absent, password_not = Absent, password_in = Absent, password_not_in = Absent, password_lt = Absent, password_lte = Absent, password_gt = Absent, password_gte = Absent, password_contains = Absent, password_not_contains = Absent, password_starts_with = Absent, password_not_starts_with = Absent, password_ends_with = Absent, password_not_ends_with = Absent, positions_every = Absent, positions_some = Absent, positions_none = Absent, submissions_every = Absent, submissions_some = Absent, submissions_none = Absent, transitions_every = Absent, transitions_some = Absent, transitions_none = Absent, topics_every = Absent, topics_some = Absent, topics_none = Absent, tags_every = Absent, tags_some = Absent, tags_none = Absent }
    in
    UserWhereInput { and = optionals.and, or = optionals.or, not = optionals.not, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, email = optionals.email, email_not = optionals.email_not, email_in = optionals.email_in, email_not_in = optionals.email_not_in, email_lt = optionals.email_lt, email_lte = optionals.email_lte, email_gt = optionals.email_gt, email_gte = optionals.email_gte, email_contains = optionals.email_contains, email_not_contains = optionals.email_not_contains, email_starts_with = optionals.email_starts_with, email_not_starts_with = optionals.email_not_starts_with, email_ends_with = optionals.email_ends_with, email_not_ends_with = optionals.email_not_ends_with, password = optionals.password, password_not = optionals.password_not, password_in = optionals.password_in, password_not_in = optionals.password_not_in, password_lt = optionals.password_lt, password_lte = optionals.password_lte, password_gt = optionals.password_gt, password_gte = optionals.password_gte, password_contains = optionals.password_contains, password_not_contains = optionals.password_not_contains, password_starts_with = optionals.password_starts_with, password_not_starts_with = optionals.password_not_starts_with, password_ends_with = optionals.password_ends_with, password_not_ends_with = optionals.password_not_ends_with, positions_every = optionals.positions_every, positions_some = optionals.positions_some, positions_none = optionals.positions_none, submissions_every = optionals.submissions_every, submissions_some = optionals.submissions_some, submissions_none = optionals.submissions_none, transitions_every = optionals.transitions_every, transitions_some = optionals.transitions_some, transitions_none = optionals.transitions_none, topics_every = optionals.topics_every, topics_some = optionals.topics_some, topics_none = optionals.topics_none, tags_every = optionals.tags_every, tags_some = optionals.tags_some, tags_none = optionals.tags_none }


type alias UserWhereInputOptionalFields =
    { and : OptionalArgument (List UserWhereInput), or : OptionalArgument (List UserWhereInput), not : OptionalArgument (List UserWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, email : OptionalArgument String, email_not : OptionalArgument String, email_in : OptionalArgument (List String), email_not_in : OptionalArgument (List String), email_lt : OptionalArgument String, email_lte : OptionalArgument String, email_gt : OptionalArgument String, email_gte : OptionalArgument String, email_contains : OptionalArgument String, email_not_contains : OptionalArgument String, email_starts_with : OptionalArgument String, email_not_starts_with : OptionalArgument String, email_ends_with : OptionalArgument String, email_not_ends_with : OptionalArgument String, password : OptionalArgument String, password_not : OptionalArgument String, password_in : OptionalArgument (List String), password_not_in : OptionalArgument (List String), password_lt : OptionalArgument String, password_lte : OptionalArgument String, password_gt : OptionalArgument String, password_gte : OptionalArgument String, password_contains : OptionalArgument String, password_not_contains : OptionalArgument String, password_starts_with : OptionalArgument String, password_not_starts_with : OptionalArgument String, password_ends_with : OptionalArgument String, password_not_ends_with : OptionalArgument String, positions_every : OptionalArgument PositionWhereInput, positions_some : OptionalArgument PositionWhereInput, positions_none : OptionalArgument PositionWhereInput, submissions_every : OptionalArgument SubmissionWhereInput, submissions_some : OptionalArgument SubmissionWhereInput, submissions_none : OptionalArgument SubmissionWhereInput, transitions_every : OptionalArgument TransitionWhereInput, transitions_some : OptionalArgument TransitionWhereInput, transitions_none : OptionalArgument TransitionWhereInput, topics_every : OptionalArgument TopicWhereInput, topics_some : OptionalArgument TopicWhereInput, topics_none : OptionalArgument TopicWhereInput, tags_every : OptionalArgument TagWhereInput, tags_some : OptionalArgument TagWhereInput, tags_none : OptionalArgument TagWhereInput }


{-| Type alias for the `UserWhereInput` attributes. Note that this type
needs to use the `UserWhereInput` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/graphqelm/issues/33>.
-}
type alias UserWhereInputRaw =
    { and : OptionalArgument (List UserWhereInput), or : OptionalArgument (List UserWhereInput), not : OptionalArgument (List UserWhereInput), id : OptionalArgument Api.Scalar.Id, id_not : OptionalArgument Api.Scalar.Id, id_in : OptionalArgument (List Api.Scalar.Id), id_not_in : OptionalArgument (List Api.Scalar.Id), id_lt : OptionalArgument Api.Scalar.Id, id_lte : OptionalArgument Api.Scalar.Id, id_gt : OptionalArgument Api.Scalar.Id, id_gte : OptionalArgument Api.Scalar.Id, id_contains : OptionalArgument Api.Scalar.Id, id_not_contains : OptionalArgument Api.Scalar.Id, id_starts_with : OptionalArgument Api.Scalar.Id, id_not_starts_with : OptionalArgument Api.Scalar.Id, id_ends_with : OptionalArgument Api.Scalar.Id, id_not_ends_with : OptionalArgument Api.Scalar.Id, createdAt : OptionalArgument Api.Scalar.DateTime, createdAt_not : OptionalArgument Api.Scalar.DateTime, createdAt_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_not_in : OptionalArgument (List Api.Scalar.DateTime), createdAt_lt : OptionalArgument Api.Scalar.DateTime, createdAt_lte : OptionalArgument Api.Scalar.DateTime, createdAt_gt : OptionalArgument Api.Scalar.DateTime, createdAt_gte : OptionalArgument Api.Scalar.DateTime, updatedAt : OptionalArgument Api.Scalar.DateTime, updatedAt_not : OptionalArgument Api.Scalar.DateTime, updatedAt_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_not_in : OptionalArgument (List Api.Scalar.DateTime), updatedAt_lt : OptionalArgument Api.Scalar.DateTime, updatedAt_lte : OptionalArgument Api.Scalar.DateTime, updatedAt_gt : OptionalArgument Api.Scalar.DateTime, updatedAt_gte : OptionalArgument Api.Scalar.DateTime, email : OptionalArgument String, email_not : OptionalArgument String, email_in : OptionalArgument (List String), email_not_in : OptionalArgument (List String), email_lt : OptionalArgument String, email_lte : OptionalArgument String, email_gt : OptionalArgument String, email_gte : OptionalArgument String, email_contains : OptionalArgument String, email_not_contains : OptionalArgument String, email_starts_with : OptionalArgument String, email_not_starts_with : OptionalArgument String, email_ends_with : OptionalArgument String, email_not_ends_with : OptionalArgument String, password : OptionalArgument String, password_not : OptionalArgument String, password_in : OptionalArgument (List String), password_not_in : OptionalArgument (List String), password_lt : OptionalArgument String, password_lte : OptionalArgument String, password_gt : OptionalArgument String, password_gte : OptionalArgument String, password_contains : OptionalArgument String, password_not_contains : OptionalArgument String, password_starts_with : OptionalArgument String, password_not_starts_with : OptionalArgument String, password_ends_with : OptionalArgument String, password_not_ends_with : OptionalArgument String, positions_every : OptionalArgument PositionWhereInput, positions_some : OptionalArgument PositionWhereInput, positions_none : OptionalArgument PositionWhereInput, submissions_every : OptionalArgument SubmissionWhereInput, submissions_some : OptionalArgument SubmissionWhereInput, submissions_none : OptionalArgument SubmissionWhereInput, transitions_every : OptionalArgument TransitionWhereInput, transitions_some : OptionalArgument TransitionWhereInput, transitions_none : OptionalArgument TransitionWhereInput, topics_every : OptionalArgument TopicWhereInput, topics_some : OptionalArgument TopicWhereInput, topics_none : OptionalArgument TopicWhereInput, tags_every : OptionalArgument TagWhereInput, tags_some : OptionalArgument TagWhereInput, tags_none : OptionalArgument TagWhereInput }


{-| Type for the UserWhereInput input object.
-}
type UserWhereInput
    = UserWhereInput UserWhereInputRaw


{-| Encode a UserWhereInput into a value that can be used as an argument.
-}
encodeUserWhereInput : UserWhereInput -> Value
encodeUserWhereInput (UserWhereInput input) =
    Encode.maybeObject
        [ ( "AND", (encodeUserWhereInput |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeUserWhereInput |> Encode.list) |> Encode.optional input.or ), ( "NOT", (encodeUserWhereInput |> Encode.list) |> Encode.optional input.not ), ( "id", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id ), ( "id_not", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not ), ( "id_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lt ), ( "id_lte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_lte ), ( "id_gt", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gt ), ( "id_gte", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_gte ), ( "id_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_contains ), ( "id_not_contains", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (\(Api.Scalar.Id raw) -> Encode.string raw) |> Encode.optional input.id_not_ends_with ), ( "createdAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt ), ( "createdAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.createdAt_gte ), ( "updatedAt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (\(Api.Scalar.DateTime raw) -> Encode.string raw) |> Encode.optional input.updatedAt_gte ), ( "email", Encode.string |> Encode.optional input.email ), ( "email_not", Encode.string |> Encode.optional input.email_not ), ( "email_in", (Encode.string |> Encode.list) |> Encode.optional input.email_in ), ( "email_not_in", (Encode.string |> Encode.list) |> Encode.optional input.email_not_in ), ( "email_lt", Encode.string |> Encode.optional input.email_lt ), ( "email_lte", Encode.string |> Encode.optional input.email_lte ), ( "email_gt", Encode.string |> Encode.optional input.email_gt ), ( "email_gte", Encode.string |> Encode.optional input.email_gte ), ( "email_contains", Encode.string |> Encode.optional input.email_contains ), ( "email_not_contains", Encode.string |> Encode.optional input.email_not_contains ), ( "email_starts_with", Encode.string |> Encode.optional input.email_starts_with ), ( "email_not_starts_with", Encode.string |> Encode.optional input.email_not_starts_with ), ( "email_ends_with", Encode.string |> Encode.optional input.email_ends_with ), ( "email_not_ends_with", Encode.string |> Encode.optional input.email_not_ends_with ), ( "password", Encode.string |> Encode.optional input.password ), ( "password_not", Encode.string |> Encode.optional input.password_not ), ( "password_in", (Encode.string |> Encode.list) |> Encode.optional input.password_in ), ( "password_not_in", (Encode.string |> Encode.list) |> Encode.optional input.password_not_in ), ( "password_lt", Encode.string |> Encode.optional input.password_lt ), ( "password_lte", Encode.string |> Encode.optional input.password_lte ), ( "password_gt", Encode.string |> Encode.optional input.password_gt ), ( "password_gte", Encode.string |> Encode.optional input.password_gte ), ( "password_contains", Encode.string |> Encode.optional input.password_contains ), ( "password_not_contains", Encode.string |> Encode.optional input.password_not_contains ), ( "password_starts_with", Encode.string |> Encode.optional input.password_starts_with ), ( "password_not_starts_with", Encode.string |> Encode.optional input.password_not_starts_with ), ( "password_ends_with", Encode.string |> Encode.optional input.password_ends_with ), ( "password_not_ends_with", Encode.string |> Encode.optional input.password_not_ends_with ), ( "positions_every", encodePositionWhereInput |> Encode.optional input.positions_every ), ( "positions_some", encodePositionWhereInput |> Encode.optional input.positions_some ), ( "positions_none", encodePositionWhereInput |> Encode.optional input.positions_none ), ( "submissions_every", encodeSubmissionWhereInput |> Encode.optional input.submissions_every ), ( "submissions_some", encodeSubmissionWhereInput |> Encode.optional input.submissions_some ), ( "submissions_none", encodeSubmissionWhereInput |> Encode.optional input.submissions_none ), ( "transitions_every", encodeTransitionWhereInput |> Encode.optional input.transitions_every ), ( "transitions_some", encodeTransitionWhereInput |> Encode.optional input.transitions_some ), ( "transitions_none", encodeTransitionWhereInput |> Encode.optional input.transitions_none ), ( "topics_every", encodeTopicWhereInput |> Encode.optional input.topics_every ), ( "topics_some", encodeTopicWhereInput |> Encode.optional input.topics_some ), ( "topics_none", encodeTopicWhereInput |> Encode.optional input.topics_none ), ( "tags_every", encodeTagWhereInput |> Encode.optional input.tags_every ), ( "tags_some", encodeTagWhereInput |> Encode.optional input.tags_some ), ( "tags_none", encodeTagWhereInput |> Encode.optional input.tags_none ) ]
