# import User from './prisma.graphql'

type AuthResponse {
  id: ID!
  email: String!
  token: String!
}

type Query {
  user: User
  position(id: ID!): Position
  positions: [Position!]!
  transition(id: ID!): Transition
  transitions: [Transition!]!
  submission(id: ID!): Submission
  submissions: [Submission!]!
  tag(id: ID!): Tag
  tags: [Tag!]!
  topic(id: ID!): Topic
  topics: [Topic!]!
}

type Mutation {
  authenticateUser(email: String!, password: String!): AuthResponse!
  signUpUser(email: String!, password: String!): AuthResponse!
  changePassword(password: String!): Boolean!
  createPosition(name: String!, notes: [String!]!): Position!
  createTransition(
    name: String!
    notes: [String!]!
    steps: [String!]!
    startPosition: ID!
    endPosition: ID!
    tags: [ID!]!
  ): Transition!
  createSubmission(
    name: String!
    notes: [String!]!
    steps: [String!]!
    tags: [ID!]!
    position: ID!
  ): Submission!
  createTag(name: String!): Tag!
  createTopic(name: String!, notes: [String!]!): Topic!
  updatePosition(id: ID!, name: String!, notes: [String!]!): Position!
  updateTransition(
    id: ID!
    name: String!
    notes: [String!]!
    steps: [String!]!
    startPosition: ID!
    endPosition: ID!
    tags: [ID!]!
  ): Transition!
  updateSubmission(
    id: ID!
    name: String!
    notes: [String!]!
    steps: [String!]!
    tags: [ID!]!
    position: ID!
  ): Submission!
  updateTag(id: ID!, name: String!): Tag!
  updateTopic(id: ID!, name: String!, notes: [String!]!): Topic!
  deletePosition(id: ID!): ID!
  deleteTransition(id: ID!): ID!
  deleteSubmission(id: ID!): ID!
  deleteTag(id: ID!): ID!
  deleteTopic(id: ID!): ID!
}
